name: Deploy App

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      HOST: root@87.228.88.93
      DEPLOY_DIRECTORY: /root/apps/url-shortener
      CONFIG_PATH: /root/apps/url-shortener/config/prod.yaml
      ENV_FILE_PATH: /root/apps/url-shortener/config.env

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag }}

      - name: Verify tag exists
        run: |
          git fetch --all --tags
          if ! git rev-parse "${{ github.event.inputs.tag}}" >/dev/null 2>&1; then
            echo "::error::Tag '${{ github.event.inputs.tag }}' not found"
            exit 1
          fi

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'  # Актуальная версия Go

      - name: Build app
        run: |
          go mod download
          go build -o url-shortener ./cmd/url-shortener

      - name: Prepare SSH connection
        run: |
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > deploy_key.pem
          chmod 600 deploy_key.pem
          mkdir -p ~/.ssh
          echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts

      - name: Test SSH connection
        run: ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "echo 'SSH connection successful!'"

      - name: Deploy application
        run: |
          # Create directory structure
          ssh -i deploy_key.pem ${{ env.HOST }} "\
            mkdir -p ${{ env.DEPLOY_DIRECTORY }} && \
            mkdir -p $(dirname ${{ env.CONFIG_PATH }})"
          
          # Copy files
          rsync -avz -e 'ssh -i deploy_key.pem' \
            --exclude='.git' \
            --exclude='.github' \
            ./ ${{ env.HOST}}:${{ env.DEPLOY_DIRECTORY}}
          
          # Setup environment
          ssh -i deploy_key.pem ${{ env.HOST }} "\
            touch ${{ env.ENV_FILE_PATH }} && \
            chmod 600 ${{ env.ENV_FILE_PATH }} && \
            echo 'CONFIG_PATH=${{ env.CONFIG_PATH }}' > ${{ env.ENV_FILE_PATH }} && \
            echo 'HTTP_SERVER_PASSWORD=${{ secrets.AUTH_PASS }}' >> ${{ env.ENV_FILE_PATH }}"
          
          # Deploy systemd service
          scp -i deploy_key.pem ./deployment/url-shortener.service ${{ env.HOST}}:/etc/systemd/system/
          
          # Enable and start service
          ssh -i deploy_key.pem ${{ env.HOST }} "\
            systemctl daemon-reload && \
            systemctl enable url-shortener.service && \
            systemctl restart url-shortener.service && \
            systemctl status url-shortener.service"